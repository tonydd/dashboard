# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    solarClientId: '%env(string:SOLAR_CLIENT_ID)%'
    solarClientSecret: '%env(string:SOLAR_CLIENT_SECRET)%'
    solarDeviceId: '%env(string:SOLAR_DEVICE_ID)%'
    solarApiUrl: '%env(string:SOLAR_API_URL)%'
    atlanticTokenUrl: '%env(string:ATLANTIC_TOKEN_URL)%'
    atlanticTokenAuthorization: '%env(string:ATLANTIC_TOKEN_AUTHORIZATION)%'
    atlanticUsername: '%env(string:ATLANTIC_USERNAME)%'
    atlanticPassword: '%env(string:ATLANTIC_PASSWORD)%'
    magellanTokenUrl: '%env(string:MAGELLAN_TOKEN_URL)%'
    overkizTokenUrl: '%env(string:OVERKIZ_TOKEN_URL)%'
    overkizAuthorization: '%env(string:OVERKIZ_AUTHORIZATION)%'
    overkizEndpointUrl: '%env(string:OVERKIZ_ENDPOINT_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $solarClientId: '%solarClientId%'
            $solarClientSecret: '%solarClientSecret%'
            $solarDeviceId: '%solarDeviceId%'
            $solarApiUrl: '%solarApiUrl%'
            $atlanticTokenUrl: '%atlanticTokenUrl%'
            $atlanticTokenAuthorization: '%atlanticTokenAuthorization%'
            $atlanticUsername: '%atlanticUsername%'
            $atlanticPassword: '%atlanticPassword%'
            $magellanTokenUrl: '%magellanTokenUrl%'
            $overkizTokenUrl: '%overkizTokenUrl%'
            $overkizAuthorization: '%overkizAuthorization%'
            $overkizEndpointUrl: '%overkizEndpointUrl%'


    # Automatically injects dependencies in your services.
    # Inject parameters as env variables

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
